version: "3.9"

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2025-latest
    container_name: sqlserver
    environment:
      MSSQL_SA_PASSWORD: "Str0ngP@ssword!"
      ACCEPT_EULA: "Yes"
      MSSQL_PID: "Developer"
      MSSQL_ENCRYPT: "DISABLED"
    ports:
      - "1433:1433"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  authservice:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    container_name: authservice
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SQLSERVER_HOST: sqlserver
      SQLSERVER_PORT: 1433
      SQLSERVER_USER: sa
      SQLSERVER_PASSWORD: Str0ngP@ssword!
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "5000:8080"
    depends_on:
      - sqlserver

  inventoryservice:
    build:
      context: ./InventoryService
      dockerfile: Dockerfile
    container_name: inventoryservice
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SQLSERVER_HOST: sqlserver
      SQLSERVER_PORT: 1433
      SQLSERVER_USER: sa
      SQLSERVER_PASSWORD: Str0ngP@ssword!
      AUTH_URL: http://authservice:8080
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "5001:8080"
    depends_on:
      - sqlserver
      - authservice

  salesservice:
    build:
      context: ./SalesService
      dockerfile: Dockerfile
    container_name: salesservice
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SQLSERVER_HOST: sqlserver
      SQLSERVER_PORT: 1433
      SQLSERVER_USER: sa
      SQLSERVER_PASSWORD: Str0ngP@ssword!
      AUTH_URL: http://authservice:8080
      INVENTORY_URL: http://inventoryservice:8080
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "5002:8080"
    depends_on:
      - sqlserver
      - authservice
      - inventoryservice

  apigateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: apigateway
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "8000:8080"
    depends_on:
      - authservice
      - inventoryservice
      - salesservice

networks:
  default:
    driver: bridge
