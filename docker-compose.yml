version: "3.9"

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "Str0ngP@ssword!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - backend

  authservice:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    container_name: authservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=AuthDb;User Id=sa;Password=Str0ngP@ssword!;TrustServerCertificate=True
    ports:
      - "5000:8080"
    depends_on:
      - sqlserver
    networks:
      - backend

  inventoryservice:
    build:
      context: ./InventoryService
      dockerfile: Dockerfile
    container_name: inventoryservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=InventoryDb;User Id=sa;Password=Str0ngP@ssword!;TrustServerCertificate=True
    ports:
      - "5001:8080"
    depends_on:
      - sqlserver
    networks:
      - backend

  salesservice:
    build:
      context: ./SalesService
      dockerfile: Dockerfile
    container_name: salesservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=SalesDb;User Id=sa;Password=Str0ngP@ssword!;TrustServerCertificate=True
      - AUTH_URL=http://authservice
      - INVENTORY_URL=http://inventoryservice
    ports:
      - "5002:8080"
    depends_on:
      - sqlserver
      - authservice
      - inventoryservice
    networks:
      - backend

networks:
  backend:
    driver: bridge
